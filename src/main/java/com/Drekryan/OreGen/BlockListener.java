package com.Drekryan.OreGen;

import org.bukkit.Location;
import org.bukkit.Material;
import org.bukkit.Sound;
import org.bukkit.block.Block;
import org.bukkit.block.BlockFace;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockFromToEvent;
import org.bukkit.plugin.Plugin;

class BlockListener implements Listener {
    private int DEBUG = 0; //Enable debug messages

    private Plugin plugin;
    private final BlockFace[] faces = new BlockFace[]{BlockFace.SELF, BlockFace.UP, BlockFace.DOWN, BlockFace.NORTH, BlockFace.EAST, BlockFace.SOUTH, BlockFace.WEST};
    private final Material[] oreMaterials = new Material[]{Material.COBBLESTONE, Material.DIAMOND_ORE, Material.EMERALD_ORE, Material.REDSTONE_ORE, Material.LAPIS_ORE, Material.GOLD_ORE, Material.IRON_ORE, Material.COAL_ORE};
    private Location oreLocation;

    BlockListener(Plugin plugin) {
        this.plugin = plugin;
    }

    @EventHandler
    public void onBlockFromTo(BlockFromToEvent event) {
        Block block = event.getBlock();
        Block toBlock  = event.getToBlock();

        if (block.getType() != Material.STATIONARY_WATER || toBlock.getType() != Material.AIR) return;

        if (DEBUG == 1) {
            System.out.println("From Block: " + block.getType().toString() + " | " + "To Block: " + toBlock.getType().toString());
            System.out.println("Looking for lava source...");
        }

        // Check if an ore should be generated by looking for the correct
        // source blocks
        if (shouldGenerate(block.getType(), toBlock)) {
            if (oreLocation != null) {
                event.setCancelled(true);

                if (DEBUG == 1)
                    System.out.println("Ore Location: " + oreLocation.toString());

                //Pick a random ore to spawn
                //TODO: Chance System
                int randomIndex = (int)Math.floor(Math.random() * oreMaterials.length);
                Material ore = oreMaterials[randomIndex];

                //Spawn block and play lava extinguish sound
                if (ore != null) {
                    block.getWorld().getBlockAt(oreLocation).setType(ore);
                    block.getWorld().playSound(block.getLocation(), Sound.BLOCK_LAVA_EXTINGUISH, 1.0f, 1.0f);
                }
            }
        }
    }

    private boolean shouldGenerate(Material blockMaterial, Block toBlock) {
        BlockFace[] blockFaces = this.faces;
        int length = blockFaces.length;
        int index = 0;

        while (index < length) {
            BlockFace blockFace = blockFaces[index];
            if (DEBUG == 1)
                System.out.println("Found: " + toBlock.getRelative(blockFace, 1).getType().toString());

            //Check for correct source blocks
            //TODO: Simplify and improve check
            if (toBlock.getRelative(blockFace, 1).getType() == (blockMaterial == Material.WATER ||
                blockMaterial == Material.STATIONARY_WATER ? Material.LAVA : Material.WATER) ||
                    toBlock.getRelative(blockFace, 1).getType() == (blockMaterial == Material.WATER ||
                     blockMaterial == Material.STATIONARY_WATER ? Material.STATIONARY_LAVA : Material.STATIONARY_WATER)) {
                if (DEBUG == 1)
                    System.out.println("FOUND LAVA! Attempting to generate ore...");

                //Set the location of the source block to update
                oreLocation = toBlock.getLocation();
                return true;
            }
            ++index;
        }

        return false;
    }
}
